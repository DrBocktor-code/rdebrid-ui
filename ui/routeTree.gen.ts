/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as AuthenticatedImport } from "./routes/_authenticated"
import { Route as AuthImport } from "./routes/_auth"
import { Route as AuthenticatedIndexImport } from "./routes/_authenticated.index"
import { Route as AuthenticatedViewImport } from "./routes/_authenticated.view"
import { Route as AuthenticatedDownloaderImport } from "./routes/_authenticated.downloader"
import { Route as AuthLoginImport } from "./routes/_auth.login"
import { Route as AuthenticatedWatchSplatImport } from "./routes/_authenticated.watch.$"
import { Route as AuthenticatedDownloaderTabIdImport } from "./routes/_authenticated.downloader.$tabId"

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: "/_authenticated",
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: "/_auth",
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  path: "/",
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedViewRoute = AuthenticatedViewImport.update({
  path: "/view",
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDownloaderRoute = AuthenticatedDownloaderImport.update({
  path: "/downloader",
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: "/login",
  getParentRoute: () => AuthRoute,
} as any)

const AuthenticatedWatchSplatRoute = AuthenticatedWatchSplatImport.update({
  path: "/watch/$",
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDownloaderTabIdRoute =
  AuthenticatedDownloaderTabIdImport.update({
    path: "/$tabId",
    getParentRoute: () => AuthenticatedDownloaderRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_auth": {
      id: "/_auth"
      path: ""
      fullPath: ""
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    "/_authenticated": {
      id: "/_authenticated"
      path: ""
      fullPath: ""
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    "/_auth/login": {
      id: "/_auth/login"
      path: "/login"
      fullPath: "/login"
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    "/_authenticated/downloader": {
      id: "/_authenticated/downloader"
      path: "/downloader"
      fullPath: "/downloader"
      preLoaderRoute: typeof AuthenticatedDownloaderImport
      parentRoute: typeof AuthenticatedImport
    }
    "/_authenticated/view": {
      id: "/_authenticated/view"
      path: "/view"
      fullPath: "/view"
      preLoaderRoute: typeof AuthenticatedViewImport
      parentRoute: typeof AuthenticatedImport
    }
    "/_authenticated/": {
      id: "/_authenticated/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    "/_authenticated/downloader/$tabId": {
      id: "/_authenticated/downloader/$tabId"
      path: "/$tabId"
      fullPath: "/downloader/$tabId"
      preLoaderRoute: typeof AuthenticatedDownloaderTabIdImport
      parentRoute: typeof AuthenticatedDownloaderImport
    }
    "/_authenticated/watch/$": {
      id: "/_authenticated/watch/$"
      path: "/watch/$"
      fullPath: "/watch/$"
      preLoaderRoute: typeof AuthenticatedWatchSplatImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface AuthenticatedDownloaderRouteChildren {
  AuthenticatedDownloaderTabIdRoute: typeof AuthenticatedDownloaderTabIdRoute
}

const AuthenticatedDownloaderRouteChildren: AuthenticatedDownloaderRouteChildren =
  {
    AuthenticatedDownloaderTabIdRoute: AuthenticatedDownloaderTabIdRoute,
  }

const AuthenticatedDownloaderRouteWithChildren =
  AuthenticatedDownloaderRoute._addFileChildren(
    AuthenticatedDownloaderRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedDownloaderRoute: typeof AuthenticatedDownloaderRouteWithChildren
  AuthenticatedViewRoute: typeof AuthenticatedViewRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedWatchSplatRoute: typeof AuthenticatedWatchSplatRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDownloaderRoute: AuthenticatedDownloaderRouteWithChildren,
  AuthenticatedViewRoute: AuthenticatedViewRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedWatchSplatRoute: AuthenticatedWatchSplatRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  "": typeof AuthenticatedRouteWithChildren
  "/login": typeof AuthLoginRoute
  "/downloader": typeof AuthenticatedDownloaderRouteWithChildren
  "/view": typeof AuthenticatedViewRoute
  "/": typeof AuthenticatedIndexRoute
  "/downloader/$tabId": typeof AuthenticatedDownloaderTabIdRoute
  "/watch/$": typeof AuthenticatedWatchSplatRoute
}

export interface FileRoutesByTo {
  "": typeof AuthRouteWithChildren
  "/login": typeof AuthLoginRoute
  "/downloader": typeof AuthenticatedDownloaderRouteWithChildren
  "/view": typeof AuthenticatedViewRoute
  "/": typeof AuthenticatedIndexRoute
  "/downloader/$tabId": typeof AuthenticatedDownloaderTabIdRoute
  "/watch/$": typeof AuthenticatedWatchSplatRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  "/_auth": typeof AuthRouteWithChildren
  "/_authenticated": typeof AuthenticatedRouteWithChildren
  "/_auth/login": typeof AuthLoginRoute
  "/_authenticated/downloader": typeof AuthenticatedDownloaderRouteWithChildren
  "/_authenticated/view": typeof AuthenticatedViewRoute
  "/_authenticated/": typeof AuthenticatedIndexRoute
  "/_authenticated/downloader/$tabId": typeof AuthenticatedDownloaderTabIdRoute
  "/_authenticated/watch/$": typeof AuthenticatedWatchSplatRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ""
    | "/login"
    | "/downloader"
    | "/view"
    | "/"
    | "/downloader/$tabId"
    | "/watch/$"
  fileRoutesByTo: FileRoutesByTo
  to:
    | ""
    | "/login"
    | "/downloader"
    | "/view"
    | "/"
    | "/downloader/$tabId"
    | "/watch/$"
  id:
    | "__root__"
    | "/_auth"
    | "/_authenticated"
    | "/_auth/login"
    | "/_authenticated/downloader"
    | "/_authenticated/view"
    | "/_authenticated/"
    | "/_authenticated/downloader/$tabId"
    | "/_authenticated/watch/$"
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_authenticated"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/downloader",
        "/_authenticated/view",
        "/_authenticated/",
        "/_authenticated/watch/$"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth.login.tsx",
      "parent": "/_auth"
    },
    "/_authenticated/downloader": {
      "filePath": "_authenticated.downloader.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/downloader/$tabId"
      ]
    },
    "/_authenticated/view": {
      "filePath": "_authenticated.view.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated.index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/downloader/$tabId": {
      "filePath": "_authenticated.downloader.$tabId.tsx",
      "parent": "/_authenticated/downloader"
    },
    "/_authenticated/watch/$": {
      "filePath": "_authenticated.watch.$.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
